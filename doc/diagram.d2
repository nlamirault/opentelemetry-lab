# !/usr/bin/env d2

# ===================================== #
#       OpenTelemetry Lab
# ===================================== #

# vars: {
#   d2-config: {
#     layout-engine: elk
#   }
# }

direction: down

title: {
  label: OpenTelemetry Lab / Architecture
  near: top-center
  shape: text
  style.font-size: 40
  style.underline: true
}

classes: {
  # apps

  go: {
    label: Go
    icon: https://icons.terrastruct.com/dev%2Fgo.svg
    shape: image
  }

  rust: {
    label: Rust
    icon: https://icons.terrastruct.com/dev%2Frust.svg
    shape: image
  }

  java: {
    label: Java
    icon: https://icons.terrastruct.com/dev%2Fjava.svg
    shape: image
  }

  typescript: {
    label: Typescript
    icon: https://icons.terrastruct.com/dev%2Ftypescript.svg
    shape: image
  }

  javascript: {
    label: Javascript
    icon: https://icons.terrastruct.com/dev%2Fjavascript.svg
    shape: image
  }

  python: {
    label: Python
    icon: https://icons.terrastruct.com/dev%2Fpython.svg
    shape: image
  }

  swift: {
    label: Swift
    icon: https://icons.terrastruct.com/dev%2Fswift.svg
    shape: image
  }

  react: {
    label: React
    icon: https://icons.terrastruct.com/dev%2Freact.svg
    shape: image
  }

  # Database

  clickhouse: {
    label: Clickhouse
    icon: https://cdn.jsdelivr.net/gh/homarr-labs/dashboard-icons/svg/clickhouse.svg
    shape: image
  }

  # Observability

  opentelemetry: {
    label: OpenTelemetry
    icon: https://raw.githubusercontent.com/cncf/artwork/main/projects/opentelemetry/icon/color/opentelemetry-icon-color.svg
    shape: image
  }

  alloy: {
    label: Grafana Alloy
    icon: https://cdn.jsdelivr.net/gh/homarr-labs/dashboard-icons/svg/alloy.svg
    shape: image
  }

  # Visualizer

  grafana: {
    label: Grafana
    icon: https://cdn.jsdelivr.net/gh/homarr-labs/dashboard-icons/svg/grafana.svg
    shape: image
  }

  signoz: {
    label: Signoz
    icon: https://cdn.jsdelivr.net/gh/homarr-labs/dashboard-icons/svg/signoz.svg
    shape: image
  }

  greptimedb_fontend {
    label: Frontend
    icon: https://greptime.com/logo/icon/logo-deep.svg
    shape: image
  }

  greptimedb_datanode {
    label: Datanode
    icon: https://greptime.com/logo/icon/logo-deep.svg
    shape: image
  }

  greptimedb_metasrv {
    label: MetaServer
    icon: https://greptime.com/logo/icon/logo-deep.svg
    shape: image
  }

  # Telemetry

  prometheus: {
    label: Prometheus
    icon: https://cdn.jsdelivr.net/gh/homarr-labs/dashboard-icons/svg/prometheus.svg
    shape: image
  }
  loki: {
    label: Loki
    icon: https://grafana.com/static/img/menu/loki.svg
    shape: image
  }
  tempo: {
    label: Tempo
    icon: https://grafana.com/static/img/menu/grafana-tempo.svg
    shape: image
  }
  pyroscope: {
      label: Pyroscope
      icon: https://grafana.com/static/img/pyroscope-logo.svg
      shape: image
  }

  dash: {
    style.stroke-dash: 5
    style.animated: true
  }
}

lab: Lab {
  # monitoring: Monitoring {
  #   prometheus.class: prometheus
  # }

  # logging: Logging {
  #   loki.class: loki
  # }

  # tracing: Tracing {
  #   tempo.class: tempo
  # }

  # profiling: Profiling {
  #   pyroscope.class: pyroscope
  # }

  otel: OpenTelemetry {
    otel_collector.class: opentelemetry
    otel_collector.label: OpenTelemetry Collector

    alloy.class: alloy

    otel_collector -> _.lgtm.prometheus: {class: dash}
    otel_collector -> _.lgtm.loki: {class: dash}
    otel_collector -> _.lgtm.tempo: {class: dash}
    otel_collector -> _.lgtm.pyroscope: {class: dash}

    # otel_collector -> _.monitoring.prometheus: {class: dash}
    # otel_collector -> _.logging.loki: {class: dash}
    # otel_collector -> _.tracing.tempo: {class: dash}
    # otel_collector -> _.profiling.pyroscope: {class: dash}

    alloy -> otel_collector: {class: dash}
    # alloy -> _.profiling.pyroscope: {class: dash}

    otel_collector -> _.signoz.signoz: {class: dash}

    otel_collector -> _.greptimedb.frontend: {class: dash}
  }

  # db: Database {
  #   clickhouse.class: clickhouse
  # }

  apps: Applications {
    go.class: go
    rust.class: rust
    java.class: java
    python.class: python
    javascript.class: javascript
    typescript.class: typescript
    swift.class: swift
    react.class: react

    go -> _.otel.otel_collector
    rust -> _.otel.otel_collector
    javascript -> _.otel.otel_collector
    typescript -> _.otel.otel_collector
    java -> _.otel.otel_collector
    python -> _.otel.otel_collector
    swift -> _.otel.otel_collector
    react -> _.otel.alloy
  }

  lgtm: LGTM {
    prometheus.class: prometheus
    loki.class: loki
    tempo.class: tempo
    pyroscope.class: pyroscope
    grafana.class: grafana

    grafana -> prometheus
    grafana -> loki
    grafana -> tempo
    grafana -> pyroscope
  }

  signoz: Signoz {
    signoz.class: signoz
    clickhouse.class: clickhouse

    signoz -> clickhouse
  }

  greptimedb: GreptimeDB {
    frontend.class: greptimedb_fontend
    datanode.class: greptimedb_datanode
    metasrv.class: greptimedb_metasrv

    frontend -> datanode
    frontend -> metasrv
  }

  # observability: Observability {
  #   grafana.class: grafana
  #   signoz.class: signoz

  #   grafana -> _.monitoring.prometheus
  #   grafana -> _.logging.loki
  #   grafana -> _.tracing.tempo
  #   grafana -> _.profiling.pyroscope

  #   signoz -> _.db.clickhouse
  # }
}
